package UserInterface.Elements.TextFields.GlobalTextFields;

import DataManager.Parameters;
import UserInterface.Elements.ElementTypes;
import UserInterface.Elements.TextFields.MyGlobalTextField;
import UserInterface.UserInterface;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import static DataManager.Parameters.SEED;
import static DataManager.Parameters.logger;

public class GlobalSeedFrame extends MyGlobalTextField {

    public GlobalSeedFrame(UserInterface ui) {
        super(ElementTypes.GLOBAL_SEED_FRAME, ui);

        JLabel seedLabel = new JLabel("Seed:");
        seedLabel.setBounds(960, 17, 40, 20);
        if (Parameters.DARK_MODE) seedLabel.setForeground(Color.white);
        ui.add(seedLabel);

        if (Parameters.DARK_MODE) setBackground(Color.black);
        if (Parameters.DARK_MODE) setForeground(Color.white);

        addKeyListener(new MyKeyListener());
        logger.debug("GlobalSeedFrame initialized: {}", SEED);
    }

    private class MyKeyListener implements KeyListener {
        @Override
        public void keyTyped(KeyEvent e) {
            // Autogenerated. Not needed
        }

        @Override
        public void keyPressed(KeyEvent e) {
            // Autogenerated. Not needed
        }

        @Override
        public void keyReleased(KeyEvent e) {
            try {
                if (GlobalSeedFrame.this.getText().length() >= 18) throw new IllegalArgumentException();
                SEED = Long.parseLong(GlobalSeedFrame.this.getText().replace(" ", ""));
                logger.info("Current Seed: {}", SEED);
                System.out.println("Current Seed: " + SEED);
            } catch (NumberFormatException ex) {
                String errorMessage = "Seed is not a number!";
                logger.error(errorMessage);
            } catch (IllegalArgumentException ex) {
                String errorMessage = "Seed is too long! It must be at most 18 digits long!";
                logger.error(errorMessage);
            }
        }
    }
}
